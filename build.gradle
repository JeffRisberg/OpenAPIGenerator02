/**
 *
 */
repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.2.0"
    }
}

apply plugin: 'org.openapi.generator'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'


version = '0.1.0'

ext {
    slf4jVersion = '1.7.26'
    projectLombokVersion = '1.16.20'
    jodaTimeVersion = '2.10'
    jettyVersion = '9.4.51.v20230217'
    jerseyVersion = '2.39'
    jacksonVersion = '2.13.5'
    junitVersion = '4.12'
}

test {
    testLogging {
        showStandardStreams = true
    }
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    runtime "org.slf4j:slf4j-simple:$slf4jVersion"

    compile "org.projectlombok:lombok:$projectLombokVersion"
    compile "joda-time:joda-time:$jodaTimeVersion"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"

    compile "org.eclipse.jetty:jetty-server:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"

    compile "org.glassfish.jersey.core:jersey-common:$jerseyVersion"
    compile "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    compile "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"

    compile 'org.glassfish:javax.el:3.0.1-b09'

    testCompile "junit:junit:$junitVersion"
}

openApiGenerate {
    generatorName.set("jersey")
    inputSpec.set("$rootDir/resources/petstore.yml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("com.company.api")
    modelPackage.set("com.company.model")
    configOptions.set([
            dateLibrary: "java8"
    ])
}
